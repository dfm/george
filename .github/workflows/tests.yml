name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - published
jobs:
  tests:
    name: "py${{ matrix.python-version }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Clone the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up windows compilers
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install dependencies
        run: |
          python -m pip install -U pip pytest
          python -m pip install .
        env:
          DISTUTILS_USE_SDK: 1
          MSSdk: 1
      - name: Run tests
        run: python -m pytest -v tests

  coverage:
    name: "Run tests with coverage"
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install -U pip pytest-cov
          python -m pip install -e .
      - name: Run tests
        run: python -m pytest --cov george -v tests
      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@v20201129

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: pypa/cibuildwheel@2.5.0
        env:
          CIBW_BUILD: "cp3?-*"
          CIBW_SKIP: "cp35-* *-win32 *-manylinux_i686"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          DISTUTILS_USE_SDK: 1
          MSSdk: 1
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.9"
      - name: Build sdist
        run: |
          python -m pip install -U pip
          python -m pip install -U build
          python -m build --sdist .
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [tests, build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
